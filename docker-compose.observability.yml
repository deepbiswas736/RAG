version: '3.8'

x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_TOKEN:-""}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - observability
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=kibana
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_TOKEN:-""}
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - observability
    logging: *default-logging

  jaeger:
    image: jaegertracing/all-in-one:1.47
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "16686:16686"  # Web UI
      - "14250:14250"  # OTLP gRPC
      - "14268:14268"  # jaeger.thrift via HTTP
      - "14269:14269"  # Admin port
      - "9411:9411"   # Zipkin port
    networks:
      - observability
    logging: *default-logging
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.85.0
    command: ["--config=/etc/otel-collector-config.yml"]
    environment:
      - ELASTIC_APM_TOKEN=${ELASTIC_APM_TOKEN:-""}
      - DEPLOYMENT_REGION=${DEPLOYMENT_REGION:-"local"}
    volumes:
      - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
    depends_on:
      elasticsearch:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - observability
      - default
    logging: *default-logging

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - observability
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.0.3
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - observability
    logging: *default-logging

volumes:
  elasticsearch-data:
  prometheus-data:
  grafana-data:

networks:
  observability:
    name: rag_observability
    driver: bridge
